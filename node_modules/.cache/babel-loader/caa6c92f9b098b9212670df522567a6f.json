{"ast":null,"code":"var _jsxFileName = \"D:\\\\React\\\\testreact\\\\src\\\\conponents\\\\Search\\\\index.jsx\";\nimport React, { Component } from 'react';\nimport PubSub from 'pubsub-js'; // import axios from 'axios'\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Search extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.search = async () => {\n      //获取用户的输入(连续解构赋值+重命名)\n      const {\n        keyWordElement: {\n          value: keyWord\n        }\n      } = this; //发送请求前通知List更新状态\n\n      PubSub.publish('atguigu', {\n        isFirst: false,\n        isLoading: true\n      }); //#region 发送网络请求---使用axios发送\n\n      /* axios.get(`/api1/search/users2?q=${keyWord}`).then(\r\n      \tresponse => {\r\n      \t\t//请求成功后通知List更新状态\r\n      \t\tPubSub.publish('atguigu',{isLoading:false,users:response.data.items})\r\n      \t},\r\n      \terror => {\r\n      \t\t//请求失败后通知App更新状态\r\n      \t\tPubSub.publish('atguigu',{isLoading:false,err:error.message})\r\n      \t}\r\n      ) */\n      //#endregion\n      //发送网络请求---使用fetch发送（未优化）\n\n      /* fetch(`/api1/search/users2?q=${keyWord}`).then(\r\n      \tresponse => {\r\n      \t\tconsole.log('联系服务器成功了');\r\n      \t\treturn response.json()\r\n      \t},\r\n      \terror => {\r\n      \t\tconsole.log('联系服务器失败了',error);\r\n      \t\treturn new Promise(()=>{})\r\n      \t}\r\n      ).then(\r\n      \tresponse => {console.log('获取数据成功了',response);},\r\n      \terror => {console.log('获取数据失败了',error);}\r\n      ) */\n      //发送网络请求---使用fetch发送（优化）\n\n      try {\n        const response = await fetch(`/api1/search/users2?q=${keyWord}`);\n        const data = await response.json();\n        console.log(data);\n        PubSub.publish('atguigu', {\n          isLoading: false,\n          users: data.items\n        });\n      } catch (error) {\n        console.log('请求出错', error);\n        PubSub.publish('atguigu', {\n          isLoading: false,\n          err: error.message\n        });\n      }\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"jumbotron\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"jumbotron-heading\",\n        children: \"\\u641C\\u7D22github\\u7528\\u6237\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          ref: c => this.keyWordElement = c,\n          type: \"text\",\n          placeholder: \"\\u8F93\\u5165\\u5173\\u952E\\u8BCD\\u70B9\\u51FB\\u641C\\u7D22\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 6\n        }, this), \"\\xA0\", /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.search,\n          children: \"\\u641C\\u7D22\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 4\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["D:/React/testreact/src/conponents/Search/index.jsx"],"names":["React","Component","PubSub","Search","search","keyWordElement","value","keyWord","publish","isFirst","isLoading","response","fetch","data","json","console","log","users","items","error","err","message","render","c"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,WAAnB,C,CACA;;;AAEA,eAAe,MAAMC,MAAN,SAAqBF,SAArB,CAA+B;AAAA;AAAA;;AAAA,SAE7CG,MAF6C,GAEpC,YAAS;AACjB;AACA,YAAM;AAACC,QAAAA,cAAc,EAAC;AAACC,UAAAA,KAAK,EAACC;AAAP;AAAhB,UAAmC,IAAzC,CAFiB,CAGjB;;AACAL,MAAAA,MAAM,CAACM,OAAP,CAAe,SAAf,EAAyB;AAACC,QAAAA,OAAO,EAAC,KAAT;AAAeC,QAAAA,SAAS,EAAC;AAAzB,OAAzB,EAJiB,CAKjB;;AACA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACE;AAEA;;AACA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEE;;AACA,UAAI;AACH,cAAMC,QAAQ,GAAE,MAAMC,KAAK,CAAE,yBAAwBL,OAAQ,EAAlC,CAA3B;AACA,cAAMM,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACAX,QAAAA,MAAM,CAACM,OAAP,CAAe,SAAf,EAAyB;AAACE,UAAAA,SAAS,EAAC,KAAX;AAAiBO,UAAAA,KAAK,EAACJ,IAAI,CAACK;AAA5B,SAAzB;AACA,OALD,CAKE,OAAOC,KAAP,EAAc;AACfJ,QAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAmBG,KAAnB;AACAjB,QAAAA,MAAM,CAACM,OAAP,CAAe,SAAf,EAAyB;AAACE,UAAAA,SAAS,EAAC,KAAX;AAAiBU,UAAAA,GAAG,EAACD,KAAK,CAACE;AAA3B,SAAzB;AACA;AACD,KA7C4C;AAAA;;AA+C7CC,EAAAA,MAAM,GAAG;AACR,wBACC;AAAS,MAAA,SAAS,EAAC,WAAnB;AAAA,8BACC;AAAI,QAAA,SAAS,EAAC,mBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADD,eAEC;AAAA,gCACC;AAAO,UAAA,GAAG,EAAEC,CAAC,IAAI,KAAKlB,cAAL,GAAsBkB,CAAvC;AAA0C,UAAA,IAAI,EAAC,MAA/C;AAAsD,UAAA,WAAW,EAAC;AAAlE;AAAA;AAAA;AAAA;AAAA,gBADD,uBAEC;AAAQ,UAAA,OAAO,EAAE,KAAKnB,MAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFD;AAAA;AAAA;AAAA;AAAA;AAAA,cAFD;AAAA;AAAA;AAAA;AAAA;AAAA,YADD;AASA;;AAzD4C","sourcesContent":["import React, { Component } from 'react'\r\nimport PubSub from 'pubsub-js'\r\n// import axios from 'axios'\r\n\r\nexport default class Search extends Component {\r\n\r\n\tsearch = async()=>{\r\n\t\t//获取用户的输入(连续解构赋值+重命名)\r\n\t\tconst {keyWordElement:{value:keyWord}} = this\r\n\t\t//发送请求前通知List更新状态\r\n\t\tPubSub.publish('atguigu',{isFirst:false,isLoading:true})\r\n\t\t//#region 发送网络请求---使用axios发送\r\n\t\t/* axios.get(`/api1/search/users2?q=${keyWord}`).then(\r\n\t\t\tresponse => {\r\n\t\t\t\t//请求成功后通知List更新状态\r\n\t\t\t\tPubSub.publish('atguigu',{isLoading:false,users:response.data.items})\r\n\t\t\t},\r\n\t\t\terror => {\r\n\t\t\t\t//请求失败后通知App更新状态\r\n\t\t\t\tPubSub.publish('atguigu',{isLoading:false,err:error.message})\r\n\t\t\t}\r\n\t\t) */\r\n\t\t//#endregion\r\n\t\t\t\r\n\t\t//发送网络请求---使用fetch发送（未优化）\r\n\t\t/* fetch(`/api1/search/users2?q=${keyWord}`).then(\r\n\t\t\tresponse => {\r\n\t\t\t\tconsole.log('联系服务器成功了');\r\n\t\t\t\treturn response.json()\r\n\t\t\t},\r\n\t\t\terror => {\r\n\t\t\t\tconsole.log('联系服务器失败了',error);\r\n\t\t\t\treturn new Promise(()=>{})\r\n\t\t\t}\r\n\t\t).then(\r\n\t\t\tresponse => {console.log('获取数据成功了',response);},\r\n\t\t\terror => {console.log('获取数据失败了',error);}\r\n\t\t) */\r\n\r\n\t\t//发送网络请求---使用fetch发送（优化）\r\n\t\ttry {\r\n\t\t\tconst response= await fetch(`/api1/search/users2?q=${keyWord}`)\r\n\t\t\tconst data = await response.json()\r\n\t\t\tconsole.log(data);\r\n\t\t\tPubSub.publish('atguigu',{isLoading:false,users:data.items})\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log('请求出错',error);\r\n\t\t\tPubSub.publish('atguigu',{isLoading:false,err:error.message})\r\n\t\t}\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<section className=\"jumbotron\">\r\n\t\t\t\t<h3 className=\"jumbotron-heading\">搜索github用户</h3>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<input ref={c => this.keyWordElement = c} type=\"text\" placeholder=\"输入关键词点击搜索\"/>&nbsp;\r\n\t\t\t\t\t<button onClick={this.search}>搜索</button>\r\n\t\t\t\t</div>\r\n\t\t\t</section>\r\n\t\t)\r\n\t}\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}